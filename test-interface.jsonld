{
  "@context": [
    "https://openactive.io/ns-extension",
    {
      "test": "https://openactive.io/test-interface#"
    }
  ],
  "@graph": [
    {
      "@id": "test:testOpportunityCriteria",
      "@type": "Property",
      "label": "testOpportunityCriteria",
      "comment": "The opportunity criteria which the Event conforms to.",
      "domainIncludes": [
        "schema:Event"
      ],
      "rangeIncludes": [
        "test:TestOpportunityCriteriaEnumeration"
      ]
    },
    {
      "@id": "test:TestOpportunityCriteriaEnumeration",
      "@type": "Class",
      "label": "TestOpportunityCriteriaEnumeration",
      "comment": "An enumeration of test opportunity criteria to which an opportunity must conform.",
      "subClassOf": [
        "schema:Enumeration"
      ]
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookable",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookable",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1`, and includes at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted. If both free and paid opportunities are supported by the Booking System, the resulting opportunity should be randomly either free or paid."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityNotBookableViaAvailableChannel",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityNotBookableViaAvailableChannel",
      "comment": "availableChannel of the `Offer` does not include `https://openactive.io/OpenBookingPrepayment`"
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableNoSpaces",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableNoSpaces",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity == 0`, and includes at least one `Offer` with `prepayment` value that is either `https://openactive.io/Required` or omitted."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableTwoSpaces",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableTwoSpaces",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity == 2`, and includes at least one `Offer` with `prepayment` value that is either `https://openactive.io/Required` or omitted."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableFiveSpaces",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableFiveSpaces",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity == 5`, and includes at least one `Offer` with `prepayment` value that is either `https://openactive.io/Required` or omitted."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableFree",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableFree",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and `Offer.price == 0`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookablePaid",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookablePaid",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and `Offer.price > 0`, and includes at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableWithinValidFromBeforeStartDate",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableWithinValidFromBeforeStartDate",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, with `startDate` in range of `validFromBeforeStartDate`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableOutsideValidFromBeforeStartDate",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableOutsideValidFromBeforeStartDate",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, except with `startDate` outside of range of `validFromBeforeStartDate`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableCancellable",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableCancellable",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, without `latestCancellationBeforeStartDate`, and with `allowCustomerCancellationFullRefund`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableCancellableWithinWindow",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableCancellableWithinWindow",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, with `latestCancellationBeforeStartDate` in range and with `allowCustomerCancellationFullRefund` as `true`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableCancellableOutsideWindow",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableCancellableOutsideWindow",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, except with `latestCancellationBeforeStartDate` outside of range; and with `allowCustomerCancellationFullRefund` as `true`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableWithinValidFromBeforeStartDateWindow",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableWithinValidFromBeforeStartDateWindow",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, with `validFromBeforeStartDate` provided, and where `validFromBeforeStartDate` subtracted from the `startDate` is in the past."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableOutsideValidFromBeforeStartDateWindow",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableOutsideValidFromBeforeStartDateWindow",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, with `validFromBeforeStartDate` provided, except where `validFromBeforeStartDate` subtracted from the `startDate` is in the future."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableFreeAttendeeDetails",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableFreeAttendeeDetails",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, with `Offer.price == 0`, and `openBookingFlowRequirement` of `https://openactive.io/OpenBookingAttendeeDetails`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookablePaidAttendeeDetails",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookablePaidAttendeeDetails",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, with `Offer.price > 0`, and `openBookingFlowRequirement` of `https://openactive.io/OpenBookingAttendeeDetails`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableAdditionalDetails",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableAdditionalDetails",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, with `openBookingFlowRequirement` of `https://openactive.io/OpenBookingIntakeForm`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookablePrepaymentOptional",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookablePrepaymentOptional",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1`, where at least one `Offer` has a `prepayment` value of `https://openactive.io/Optional`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookablePrepaymentUnavailable",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookablePrepaymentUnavailable",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1`, where at least one `Offer` has a `prepayment` value of `https://openactive.io/Unavailable` and a `price` greater than  `0`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookablePaidTaxGross",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookablePaidTaxGross",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and `Offer.price > 0`, and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, and `taxMode` of the `seller` is `https://openactive.io/TaxGross`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookablePaidTaxNet",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookablePaidTaxNet",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1` and `Offer.price > 0`, and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, and `taxMode` of the `seller` is `https://openactive.io/TaxNet`."
    },
    {
      "@id": "https://openactive.io/test-interface#TestOpportunityBookableFlowRequirementOnlyApproval",
      "@type": "test:TestOpportunityCriteriaEnumeration",
      "label": "TestOpportunityBookableFlowRequirementOnlyApproval",
      "comment": "[Bookable Opportunity with Bookable Offer](https://www.openactive.io/open-booking-api/EditorsDraft/#definition-of-a-bookable-opportunity-and-offer-pair), with `remainingAttendeeCapacity > 1`, and including at least one `Offer` with a `prepayment` value that is either `https://openactive.io/Required` or omitted, and has an `openBookingFlowRequirement` value that contains only `https://openactive.io/OpenBookingApproval`. If both free and paid opportunities are supported by the Booking System, the resulting opportunity should be randomly either free or paid."
    },

    {
      "@id": "test:OpenBookingSimulateAction",
      "@type": "Class",
      "label": "OpenBookingSimulateAction",
      "comment": "An action that invokes a simulation of a specific behaviour within the booking system.",
      "subClassOf": [
        "schema:Action"
      ]
    },
    {
      "@id": "test:SellerRequestedCancellationSimulateAction",
      "@type": "Class",
      "label": "SellerRequestedCancellationSimulationAction",
      "comment": "Simulate a [Seller requested cancellation](https://www.openactive.io/open-booking-api/EditorsDraft/#seller-requested-cancellation).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    },
    {
      "@id": "test:SellerRequestedCancellationWithMessageSimulateAction",
      "@type": "Class",
      "label": "SellerRequestedCancellationWithMessageSimulateAction",
      "comment": "Simulate a [Seller requested cancellation](https://www.openactive.io/open-booking-api/EditorsDraft/#seller-requested-cancellation), with a `cancellationMessage` provided.",
      "subClassOf": [
        "test:SellerRequestedCancellationSimulateAction"
      ]
    },
    {
      "@id": "test:ReplacementSimulateAction",
      "@type": "Class",
      "label": "ReplacementSimulateAction",
      "comment": "Simulate a [Replacement](https://www.openactive.io/open-booking-api/EditorsDraft/#cancellation-replacement-refund-calculation-and-notification).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    },
    {
      "@id": "test:CustomerNoticeSimulateAction",
      "@type": "Class",
      "label": "CustomerNoticeSimulateAction",
      "comment": "Simulate a [Customer Notice](https://www.openactive.io/open-booking-api/EditorsDraft/#customer-notice-notifications).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    },
    {
      "@id": "test:ChangeOfLogisticsSimulateAction",
      "@type": "Class",
      "label": "ChangeOfLogisticsSimulateAction",
      "comment": "Simulate a [Change of Logistics](https://www.openactive.io/open-booking-api/EditorsDraft/#change-of-logistics-notifications).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    },
    {
      "@id": "test:OpportunityAttendanceUpdateSimulateAction",
      "@type": "Class",
      "label": "OpportunityAttendanceUpdateSimulateAction",
      "comment": "Simulate an [Opportunity Attendance Update](https://www.openactive.io/open-booking-api/EditorsDraft/#opportunity-attendance-updates).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    },
    {
      "@id": "test:AccessPassUpdateSimulateAction",
      "@type": "Class",
      "label": "AccessPassUpdateSimulateAction",
      "comment": "Simulate an [`accessPass` Update](https://www.openactive.io/open-booking-api/EditorsDraft/#other-notifications).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    },
    {
      "@id": "test:AccessCodeUpdateSimulateAction",
      "@type": "Class",
      "label": "AccessCodeUpdateSimulateAction",
      "comment": "Simulate an [`accessCode` Update](https://www.openactive.io/open-booking-api/EditorsDraft/#other-notifications).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    },
    {
      "@id": "test:SellerAcceptOrderProposalSimulateAction",
      "@type": "Class",
      "label": "SellerAcceptOrderProposalSimulateAction",
      "comment": "Simulate [Proposal Approval of an `OrderProposal`](https://openactive.io/open-booking-api/EditorsDraft/#proposal-approval).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    },
    {
      "@id": "test:SellerRejectOrderProposalSimulateAction",
      "@type": "Class",
      "label": "SellerRejectOrderProposalSimulateAction",
      "comment": "Simulate [Proposal Rejection of an `OrderProposal`](https://openactive.io/open-booking-api/EditorsDraft/#proposal-rejection).",
      "subClassOf": [
        "test:OpenBookingSimulateAction"
      ]
    }
  ]
}
